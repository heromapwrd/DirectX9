/*
-------------------------------------------------------------------------
File:Diffuse.txt
Author:Liu Quanbo
Desc:Vertex shader that does diffuse light render
-------------------------------------------------------------------------
*/



matrix ViewMatrix;
matrix ViewProjMatrix;

vector LightDir;

vector DiffMtrl;
vector AmbientMtrl;

vector LightDiffIntensity = {0.0f,0.0f,1.0f,1.0f};
vector LightAmbientIntensity = {0.0f,0.0f,0.2f,1.0f};

struct VS_INPUT
{
	vector position :POSITION;
	vector normal	:NORMAL;
};

struct VS_OUTPUT
{
	vector position :POSITION;
	vector diffuse  :COLOR;
};

VS_OUTPUT Main(VS_INPUT input)
{
	VS_OUTPUT output = (VS_OUTPUT)0;
	output.position = mul(input.position,ViewProjMatrix);

	input.normal.w= 0.0f;
	input.normal = mul(input.normal,ViewMatrix);
	vector newdir = mul(LightDir,ViewMatrix);

	float s = dot(newdir,input.normal);

	if(s<0.0f)
		s=0.0f;

	output.diffuse = (AmbientMtrl*LightAmbientIntensity)+(s*(DiffMtrl*LightDiffIntensity));
	return output;
}